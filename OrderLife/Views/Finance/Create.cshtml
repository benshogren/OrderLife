@model OrderLife.Models.Finances

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)

    
    
    
     switch (Model.Step) {
         case 1:
              <p>If you are still following this tutorial, I can only assume it is because, as a person from the 18th century, you cannot operate a computer
and so have been hitting random keys and ended up  here accidentally. BUT while you're here, it may help you to acquaint yourself with typical
21st century expenses.</p><p>You are about to make a bare-bones budget. It can be 100% accurate to your situation, if the numbers you submit are 100% accurate.</p> 
<p>Some of these general expenses may not apply to you, in which case submit a $0 for that expense. And you may have some expenses that are not
listed, which you can add up and place in the 'Other' category.</p>
             break;
         case 2:
            <p>How much do you pay for your housing every month (rent or mortgage)?</p> 
        <div class="editor-field">
            @Html.EditorFor(model => model.Room)
            @Html.ValidationMessageFor(model => model.Room)
        </div>
       break;
         case 3:

       break;
         case 4:

       break;
         case 5:

       break;
         case 6:

       break;

         default: 
                
                <div class="editor-field">
            @Html.EditorFor(model => model.Room)
</div>
       break;


     }
        

      


<p>How much for utilities?</p>
<p>How much do you pay for transportation each month?</p>
<p>What are you monthly media expenses?</p>
<p>Do you make monthly loan payments?</p>
<p>If you have monthly food budget, plug in the number:</p>
<p>Do you have any other monthly expenses?</p>
<p>How much do you make every month (after taxes)?</p>
<p>Behold your rough money plot. You're becoming more on-the-ball already. How about we take a look at your health?</p>

          
    
    
    
    
    
    <fieldset>
        <legend>Finances</legend>
       
        <div class="editor-label">
            @Html.LabelFor(model => model.Room)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Room)
            @Html.ValidationMessageFor(model => model.Room)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GasHouse)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GasHouse)
            @Html.ValidationMessageFor(model => model.GasHouse)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Electricity)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Electricity)
            @Html.ValidationMessageFor(model => model.Electricity)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Water)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Water)
            @Html.ValidationMessageFor(model => model.Water)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OtherUtilities)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OtherUtilities)
            @Html.ValidationMessageFor(model => model.OtherUtilities)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarPayment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CarPayment)
            @Html.ValidationMessageFor(model => model.CarPayment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CarInsurance)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CarInsurance)
            @Html.ValidationMessageFor(model => model.CarInsurance)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.GasCar)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.GasCar)
            @Html.ValidationMessageFor(model => model.GasCar)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PublicTransportation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PublicTransportation)
            @Html.ValidationMessageFor(model => model.PublicTransportation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OtherTransportation)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OtherTransportation)
            @Html.ValidationMessageFor(model => model.OtherTransportation)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CellPhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CellPhone)
            @Html.ValidationMessageFor(model => model.CellPhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HousePhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HousePhone)
            @Html.ValidationMessageFor(model => model.HousePhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TVPlan)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TVPlan)
            @Html.ValidationMessageFor(model => model.TVPlan)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Internet)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Internet)
            @Html.ValidationMessageFor(model => model.Internet)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OtherMedia)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OtherMedia)
            @Html.ValidationMessageFor(model => model.OtherMedia)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LoanPayments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LoanPayments)
            @Html.ValidationMessageFor(model => model.LoanPayments)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OtherMonthlyLoanPayments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OtherMonthlyLoanPayments)
            @Html.ValidationMessageFor(model => model.OtherMonthlyLoanPayments)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Other)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Other)
            @Html.ValidationMessageFor(model => model.Other)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Food)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Food)
            @Html.ValidationMessageFor(model => model.Food)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Income)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Income)
            @Html.ValidationMessageFor(model => model.Income)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
